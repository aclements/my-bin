#!/bin/zsh

# TODO: Use --copy-dest or maybe --link-dest.

host=work
#dir=/tmp
dir=/usr/local/google/tmp

set -e

while [[ $1 = -* ]]; do
    case $1 in
        -h)
            host=$2
            shift 2
            ;;
        *)
            echo "unknown option $1" 1>&2
            exit 2
            ;;
    esac
done

# Get environment into an array.
envs=(${(0)"$(env -0)"})
# Keep only GO* environment variables.
envs=(${(M)envs:#GO*})
# But remove GOPATH and GOROOT.
envs=(${${envs:#GOPATH=*}:#GOROOT=*})
if [[ ${#envs} > 0 ]]; then
    echo "env ${envs}"
    echo
fi

top=$(git rev-parse --show-toplevel)
sub=$(git rev-parse --show-prefix)
now=$(date '+%Y-%m-%d-%H-%M-%S')

echo "##### Syncing to $host:$dir/gor-$now"
# This complains if copy-dest doesn't exist, but still works.
rsync -raz --info=stats,progress2 --copy-dest=$dir/gor-latest --exclude /.git --exclude /pkg --exclude /bin --exclude /austin $top/ $host:$dir/gor-$now
echo

# Link the latest gor directory to a known name to use as a template
# for the next rsync.
#
# Clean up gor syncs more than a day old and run the command.
#
# For cleaning up, we use the ctime because rsync syncs the mtime, so
# it might be old even for the directory we just synced.
#
# The slightly insane ${(q)*[@]} below means to shell quote each
# element of $* so we correctly pass spaces through the ssh. We do the
# same for envs.
ssh $host "\
ln -sfT $dir/gor-$now $dir/gor-latest && \
find $dir/gor-* -maxdepth 0 -type d -ctime +1 -exec rm -rf '{}' ';' && \
echo devel remote/$now > $dir/gor-$now/VERSION && \
cd $dir/gor-$now/$sub && \
env ${(q)envs[@]} ${(q)*[@]}" |& \
    awk -v x=$dir/gor-$now/ -v y=$top/ "{gsub(x, y); print; fflush()}"
exit ${pipestatus[1]}
